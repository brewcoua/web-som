var _=["a:not(:has(img))","a img","button",'input:not([type="hidden"])',"select","textarea",'[tabindex]:not([tabindex="-1"])','[contenteditable="true"]',".btn",'[role="button"]','[role="link"]','[role="checkbox"]','[role="radio"]','[role="input"]','[role="menuitem"]','[role="menuitemcheckbox"]','[role="menuitemradio"]','[role="option"]','[role="switch"]','[role="tab"]','[role="treeitem"]','[role="gridcell"]','[role="search"]','[role="combobox"]','[role="listbox"]','[role="slider"]','[role="spinbutton"]'],A=['input[type="text"]','input[type="password"]','input[type="email"]','input[type="tel"]','input[type="number"]','input[type="search"]','input[type="url"]','input[type="date"]','input[type="time"]','input[type="datetime-local"]','input[type="month"]','input[type="week"]','input[type="color"]',"textarea",'[contenteditable="true"]'],N=0.6,F=0.1;class B{}class S extends B{constructor(){super(...arguments)}async apply(K){return(await Promise.all(K.map(async(q)=>{if(q.offsetWidth===0&&q.offsetHeight===0)return null;const J=window.getComputedStyle(q);if(J.display==="none"||J.visibility==="hidden"||J.pointerEvents==="none")return null;let j=q.parentElement,Q=!0;while(j!==null){const X=window.getComputedStyle(j);if(X.display==="none"||X.visibility==="hidden"||X.pointerEvents==="none"){Q=!1;break}j=j.parentElement}if(!Q)return null;if(!await this.isElementVisible(q))return null;return q}))).filter((q)=>q!==null)}async isElementVisible(K){return new Promise((M)=>{const q=new IntersectionObserver(async(J)=>{const j=J[0];if(q.disconnect(),j.intersectionRatio<N){M(!1);return}const Q=K.getBoundingClientRect();if(Q.width<=1||Q.height<=1){M(!1);return}if(Q.width>=window.innerWidth*0.8||Q.height>=window.innerHeight*0.8){M(!1);return}const U=await this.getVisibilityRatio(K,Q);M(U>=N)});q.observe(K)})}async getVisibilityRatio(K,M){const q=document.createElement("canvas"),J=q.getContext("2d",{willReadFrequently:!0});if(!J)throw new Error("Could not get 2D context");const j=parseInt(window.getComputedStyle(K).zIndex||"0",10);q.width=M.width,q.height=M.height,J.fillStyle="black",J.fillRect(0,0,q.width,q.height);const Q={top:Math.max(0,M.top),left:Math.max(0,M.left),bottom:Math.min(window.innerHeight,M.bottom),right:Math.min(window.innerWidth,M.right),width:M.width,height:M.height};Q.width=Q.right-Q.left,Q.height=Q.bottom-Q.top,this.drawElement(K,J,M,M,"white");const U=this.countVisiblePixels(J,{top:Q.top-M.top,left:Q.left-M.left,width:q.width,height:q.height}),X=await Promise.all(Array.from({length:Math.ceil(1/F)}).map(async(z,G)=>{return Promise.all(Array.from({length:Math.ceil(1/F)}).map(async(w,Z)=>{const D=document.elementsFromPoint(M.left+M.width*F*G,M.top+M.height*F*Z);if(!D.includes(K))return[];const Y=D.indexOf(K);return D.slice(0,Y)}))})),$=Array.from(new Set(X.flat(2).filter((z)=>z!==K)));let W=[];for(let z of $){if(parseInt(window.getComputedStyle(z).zIndex||"0",10)<j)continue;if(z.contains(K)||K.contains(z))continue;W.push(z)}W=W.filter((z)=>{for(let G of W)if(z!==G&&G.contains(z))return!1;return!0}),await Promise.all(W.map(async(z)=>{const G=z.getBoundingClientRect();this.drawElement(z,J,G,M,"black")}));const V=this.countVisiblePixels(J,{top:Q.top-M.top,left:Q.left-M.left,width:Q.width,height:Q.height});if(q.remove(),U===0)return 0;return V/U}countVisiblePixels(K,M){const q=K.getImageData(M.left,M.top,M.width,M.height).data;let J=0;for(let j=0;j<q.length;j+=4)if(q[j]>0)J++;return J}drawElement(K,M,q,J,j="black"){const Q=window.getComputedStyle(K),U=Q.borderRadius?.split(" ").map((W)=>parseFloat(W)),X=Q.clipPath,$={top:q.top-J.top,bottom:q.bottom-J.top,left:q.left-J.left,right:q.right-J.left,width:q.width,height:q.height};if($.width=$.right-$.left,$.height=$.bottom-$.top,M.fillStyle=j,X&&X!=="none")X.split(/,| /).forEach((V)=>{const z=V.trim().match(/^([a-z]+)\((.*)\)$/);if(!z)return;switch(z[0]){case"polygon":const G=this.pathFromPolygon(V,q);M.fill(G);break;default:console.log("Unknown clip path kind: "+z)}});else if(U){const W=new Path2D;if(U.length===1)U[1]=U[0];if(U.length===2)U[2]=U[0];if(U.length===3)U[3]=U[1];W.moveTo($.left+U[0],$.top),W.arcTo($.right,$.top,$.right,$.bottom,U[1]),W.arcTo($.right,$.bottom,$.left,$.bottom,U[2]),W.arcTo($.left,$.bottom,$.left,$.top,U[3]),W.arcTo($.left,$.top,$.right,$.top,U[0]),W.closePath(),M.fill(W)}else M.fillRect($.left,$.top,$.width,$.height)}pathFromPolygon(K,M){if(!K||!K.match(/^polygon\((.*)\)$/))throw new Error("Invalid polygon format: "+K);const q=new Path2D,J=K.match(/\d+(\.\d+)?%/g);if(J&&J.length>=2){const j=parseFloat(J[0]),Q=parseFloat(J[1]);q.moveTo(j*M.width/100,Q*M.height/100);for(let U=2;U<J.length;U+=2){const X=parseFloat(J[U]),$=parseFloat(J[U+1]);q.lineTo(X*M.width/100,$*M.height/100)}q.closePath()}return q}}var k=S;var L=0.9,y=3,v=["a","button","input","select","textarea"];class g extends B{constructor(){super(...arguments)}async apply(K){const{top:M,others:q}=this.getTopLevelElements(K);return(await Promise.all(M.map(async(j)=>this.compareTopWithChildren(j,q)))).flat()}async compareTopWithChildren(K,M){if(v.some((U)=>K.matches(U)))return[K];const q=this.getBranches(K,M),J=K.getBoundingClientRect();if(q.length<=1)return[K];const Q=(await Promise.all(q.map(async(U)=>{const X=U.top.getBoundingClientRect();if(X.width/J.width<L&&X.height/J.height<L)return[];if(U.children.length===0)return[U.top];return await this.compareTopWithChildren(U.top,U.children)}))).flat();if(Q.length>y)return Q;return[K,...Q]}getBranches(K,M){const q=this.getFirstHitChildren(K,M);return q.map((J)=>{const j=M.filter((Q)=>!q.includes(Q)&&J.contains(Q));return{top:J,children:j}})}getFirstHitChildren(K,M){const q=K.querySelectorAll(":scope > *"),J=Array.from(q).filter((j)=>M.includes(j));if(J.length>0)return J;return Array.from(q).flatMap((j)=>this.getFirstHitChildren(j,M))}getTopLevelElements(K){const M=[],q=[];for(let J of K)if(!K.some((j)=>j!==J&&j.contains(J)))M.push(J);else q.push(J);return{top:M,others:q}}}var H=g;class C{filters={visibility:new k,nesting:new H};async loadElements(){const K=_.join(",");let M=Array.from(document.querySelectorAll(K));const q=this.shadowRoots();for(let $=0;$<q.length;$++)M=M.concat(Array.from(q[$].querySelectorAll(K)));const J=document.querySelectorAll("*");let j=[];for(let $=0;$<J.length;$++)if(!J[$].matches(K)&&window.getComputedStyle(J[$]).cursor==="pointer")j.push(J[$]);j=Array.from(j).filter(($,W,V)=>V.indexOf($)===W).filter(($)=>!$.closest("svg")&&!M.some((W)=>W.contains($)));const Q=await this.filters.visibility.apply(M),U=await this.filters.visibility.apply(j),X=await this.filters.nesting.apply(U.concat(Q));return Q.concat(X).filter(($,W,V)=>V.indexOf($)===W)}shadowRoots(){const K=[],M=document.createTreeWalker(document.body,NodeFilter.SHOW_ELEMENT,{acceptNode(J){return NodeFilter.FILTER_ACCEPT}});let q;while(q=M.nextNode())if(q&&q.shadowRoot)K.push(q.shadowRoot);return K}}class O{display(K){const M=[],q=[],J=[],j=()=>Math.floor(Math.random()*256);for(let Q=0;Q<K.length;Q++){const U=K[Q],X=U.getBoundingClientRect(),$=document.createElement("div");if($.style.left=`${X.left}px`,$.style.top=`${X.top}px`,$.style.width=`${X.width}px`,$.style.height=`${X.height}px`,$.classList.add("SoM"),U.isContentEditable||A.some((V)=>U.matches(V)))$.classList.add("editable");const W=[j(),j(),j()];$.style.setProperty("--SoM-color",`${W[0]}, ${W[1]}, ${W[2]}`),document.body.appendChild($),q.push({top:X.top,bottom:X.bottom,left:X.left,right:X.right,width:X.width,height:X.height,color:W}),J.push($)}for(let Q=0;Q<K.length;Q++){const U=K[Q],X=q[Q],$=document.createElement("label");$.textContent=`${Q}`,$.style.color=this.colorFromLuminance(X.color),J[Q].appendChild($);const W=$.getBoundingClientRect(),V=10,z=[];for(let Z=0;Z<=V;Z++)z.push({top:X.top-W.height,left:X.left+X.width/V*Z-W.width/2}),z.push({top:X.bottom,left:X.left+X.width/V*Z-W.width/2}),z.push({top:X.top+X.height/V*Z-W.height/2,left:X.left-W.width}),z.push({top:X.top+X.height/V*Z-W.height/2,left:X.right});const G=z.map((Z)=>{let D=0;if(Z.top<0||Z.top+W.height>window.innerHeight||Z.left<0||Z.left+W.width>window.innerWidth)D+=Infinity;else M.concat(q).forEach((Y)=>{const I=Math.max(0,Math.min(Z.left+W.width,Y.left+Y.width)-Math.max(Z.left,Y.left)),T=Math.max(0,Math.min(Z.top+W.height,Y.top+Y.height)-Math.max(Z.top,Y.top));D+=I*T});return D}),w=z[G.indexOf(Math.min(...G))];$.style.top=`${w.top-X.top}px`,$.style.left=`${w.left-X.left}px`,M.push({top:w.top,left:w.left,right:w.left+W.width,bottom:w.top+W.height,width:W.width,height:W.height}),U.setAttribute("data-SoM",`${Q}`)}}colorFromLuminance(K){const[M,q,J]=K.map((Q)=>Q/255);return 0.299*M+0.587*q+0.114*J>0.5?"black":"white"}}var P=".SoM{position:fixed;z-index:2147483646;pointer-events:none;background-color:rgba(var(--SoM-color),.3)}.SoM.editable{background:repeating-linear-gradient(45deg,rgba(var(--SoM-color),.1),rgba(var(--SoM-color),.1) 10px,rgba(var(--SoM-color),.3) 10px,rgba(var(--SoM-color),.3) 20px)}.SoM>label{position:absolute;padding:0 3px;font-size:1rem;font-weight:700;line-height:1.2rem;white-space:nowrap;font-family:\"Courier New\",Courier,monospace;background-color:rgba(var(--SoM-color),.7)}";class u{loader=new C;ui=new O;async display(){this.log("Displaying...");const K=performance.now(),M=await this.loader.loadElements();this.clear(),this.ui.display(M),this.log("Done!",`Took ${performance.now()-K}ms to display ${M.length} elements.`)}clear(){document.querySelectorAll(".SoM").forEach((K)=>{K.remove()}),document.querySelectorAll("[data-som]").forEach((K)=>{K.removeAttribute("data-som")})}hide(){document.querySelectorAll(".SoM").forEach((K)=>K.style.display="none")}show(){document.querySelectorAll(".SoM").forEach((K)=>K.style.display="block")}resolve(K){return document.querySelector(`[data-som="${K}"]`)}log(...K){console.log("%cSoM","color: white; background: #007bff; padding: 2px 5px; border-radius: 5px;",...K)}}if(!document.getElementById("SoM-styles")){const K=document.createElement("style");K.id="SoM-styles",K.innerHTML=P;const M=setInterval(()=>{if(document.head)clearInterval(M),document.head.appendChild(K)},100)}window.SoM=new u;window.SoM.log("Ready!");
